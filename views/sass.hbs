<br><hr>
<h1>
    <u>SASS</u>
</h1>
<hr><br><br>
<h3>
    Qué es Sass, como usar Sass
</h3>
<br><br>
<p>
    Comenzamos con este artículo el Manual de Sass, en el que vamos a explicarte las bases para que puedas usar Sass y beneficiarte de todas las ventajas de los preprocesadores CSS. Sass es el más usado de los preprocesadores y una de los requisitos habituales que encontrarás en ofertas de trabajo.
</p>
<br>
<p>
    En este manual te explicaremos la sintaxis de Sass y el uso en el marco del desarrollo de sitios web, de modo que puedas automatizar la traducción del código Sass a código CSS estándar.
</p>
<br>
<img src="https://desarrolloweb.com/archivoimg/general/4473.jpg" alt="">
<br><br>
<h3>
    Por qué Sass
</h3>
<br>
<p>
    Cualquier preprocesador es perfectamente válido. Podríamos sin duda elegir otras alternativas como Less o Stylus y estaría estupendo para nosotros y nuestro proyecto, ya que al final todos ofrecen más o menos las mismas utilidades. Pero sin embargo, Sass se ha convertido en el preprocesador más usado y el más demandado.
</p>
<br>
<p>
    Al haber recibido un mayor apoyo de la comunidad es más factible que encuentres ofertas de trabajo con Sass o que heredes proyectos que usan Sass, por lo que generalmente te será más útil aprender este preprocesador.
</p>
<br>
<p>
    Además, varios frameworks usan Sass, como el caso de Bootstrap. Por ello, si tienes que trabajar con ellos te vendrá mejor aprender Sass.
</p>
<br>
<h3>
    Como es la sintaxis de Sass
</h3>
<br>
<p>
    Como decimos, la tarea de aprender Sass se divide en dos bloques principales. Primero aprender a trabajar con el código de Sass y conocer su sintaxis especial. La segunda tarea sería aplicar Sass en tu flujo de trabajo, de modo que puedas usar el preprocesador fácilmente y no te quite tiempo el proceso de compilación a CSS. Veremos las dos partes en este primer artículo del Manual de Sass, comenzando por examinar su sintaxis.
</p>
<br>
<p>
    Lo primero que debes conocer de Sass es que existen dos tipos de sintaxis para escribir su código:
</p>
<br>
<ul>
    <li>Sintaxis Sass: esta sintaxis es un poco diferente de la sintaxis de CSS estándar. No difiere mucho. Por ejemplo, te evita colocar puntos y coma al final de los valores de propiedades. Además, las llaves no se usan y en su lugar se realizan indentados.</li>
    <li>Sintaxis SCSS: Es una sintaxis bastante similar a la sintaxis del propio CSS. De hecho, el código CSS es código SCSS válido. Podríamos decir que SCSS es código CSS con algunas cosas extra.</li>
</ul>
<br>
<h3>
    Como usar Sass
</h3>
<br>
<p>
    Para usar Sass tienes dos alternativas fundamentales.
</p>
<br>
<ul>
    <li>Preprocesar con alguna herramienta de interfaz gráfica, como el caso de Prepros, CodeKit o Scout-App. En principio puede ser más sencillo, ya que no requiere trabajar con la línea de comandos, pero necesitas usar un programa en concreto y no siempre puede estar disponible para ti, o no integrarse en otro flujo de trabajo que puedas tener ya asumido en tu proyecto. Además, las mejores herramientas de interfaz gráfica tienen la desventaja de ser de pago, o necesitar una licencia para desbloquear todo su poder.</li>
    <li>Usar la línea de comandos para preprocesar. Esta es la opción preferida por la mayoría de desarrolladores. No sólo porque no requiere la compra de una licencia por el software de interfaz gráfica, sino principalmente porque la puedes integrar con todo un ecosistema de herramientas para optimizar multitud de aspectos en un sitio web. Además, está al alcance de cualquier desarrollador, ya que todos tenemos un terminal en nuestro sistema operativo y finalmente, permite personalizar completamente el comportamiento del preprocesador.</li>
    <li>Usar herramientas de automatización. Como tercera opción es muy común también usar herramientas que permiten automatizar el flujo de trabajo frontend, compilando archivos CSS, Javascript, optimizando imágenes, etc. Nos referimos a paquetes como Gulp, Grunt o Webpack (aunque este último es más un empaquetador). Estos sistemas tienen la particularidad que sirven para cubrir todas las necesidades de trabajo con los lenguajes de la web y no solamente se usan para compilar el código Sass. Sería la opción más potente de las tres comentadas, aunque requiere mayor formación para poder usarlas. En este grupo también podríamos unir a PostCSS, aunque esta herramienta solamente nos sirve para convertir el CSS, aplicando diversos plugins, entre los que podría estar la compilación de Sass, y no entra en áreas como el Javascript.</li>
</ul>
<br>
<p>
    Las anteriores alternativas pueden marear un poco si no estás acostumbrado a oir acerca de tantas tecnologías. No te preocupes demasiado porque vamos a irnos a una opción sencilla que te permita comenzar a usar Sass, sin demasiado esfuerzo ni configuración. En concreto te vamos a explicar ahora a usar Sass desde tu terminal, con las herramientas "oficiales" del propio preprocesador (la alternativa planteada en el punto 2 anterior). Es una posibilidad al alcance de cualquier lector. Nuestro siguiente paso entonces será comenzar por instalar el preprocesador.
</p>
<br>
<h3>
    Instalar Sass
</h3>
<br>
<p>
    La instalación de Sass depende del sistema operativo con el que estás trabajando. Aunque todos requieren comenzar instalando el lenguaje Ruby, ya que el compilador de Sass está escrito en Ruby.
</p>
<br>
<p>
    Veamos, para cada sistema, cómo hacernos con Ruby.
</p>
<br>
<ul>
    <li>Windows: Existe un instalador de Ruby para Windows. https://rubyinstaller.org/ Puedes usarlo para faciltar las cosas.</li>
    <li>Linux: tendrás que instalar Ruby usando tu gestor de paquetes de la distribución con la que trabajes, apt-get, yum, etc.</li>
    <li>Mac: Ruby está instalado en los sistemas Mac, por lo que no necesitarías hacer ningún paso adicional.</li>
</ul>