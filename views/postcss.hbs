<br><hr>
<h1>
    <u>POSTCSS</u>
</h1>
<hr><br><br>
<h3>
    ¿Qué es PostCSS y cómo usarlo?
</h3>
<br>
<p>
    En este artículo te vamos a hablar de PostCSS, la herramienta más completa para trabajar con CSS que existe en la actualidad. PostCSS permite una increíble cantidad de mejoras en los flujos de trabajo del desarrollador, para aumentar la productividad, conseguir todo tipo de optimizaciones en el código y una mayor compatibilidad en navegadores.
</p>
<br>
<h5>
    Ecosistema de CSS y PostCSS
</h5>
<br><br>
<p>
    Cuando pensamos en el ecosistema de CSS lo primero que se nos viene a la cabeza son los frameworks como Bootstrap o los preprocesadores como Sass. Hay pocos equipos de trabajo que no usen alguna de estas herramientas y sin embargo, todavía no todos conocen PostCSS, un set de utilidades que puede mejorar mucho las prestaciones del lenguaje y la optimización de las webs.
</p>
<br>
<p>
    A PostCSS se le conoce como la «navaja suiza del CSS» y no es para menos. Técnicamente es un set de plugins escritos en Javascript (bajo la plataforma NodeJS) que permiten hacer transformaciones en el código CSS de los proyectos. Es decir a un CSS de entrada, obtenemos un CSS de salida, que lógicamente estará más optimizado o aumentará sus prestaciones por diversos motivos.
</p>
<br>
<p>
    Además, PostCSS consigue aglutinar muchas de las herramientas que ya conocemos dentro del ecosistema de CSS. Por ejemplo tiene plugins para realizar las transformaciones del CSS que incorporan los preprocesadores, consigue paliar la falta de optimización de los frameworks CSS y mucho más.
</p>
<br><br>
<h4>
    ¿Cuáles son los plugins más utilizados de PostCSS?
</h4>
<br>
<p>
    Como hemos dicho, PostCSS incorpora una cantidad notable de plugins para hacer innumerables transformaciones en el CSS. Solo para hacernos una idea del alcance de la herramienta, vamos a nombrar algunos de los plugins más utilizados.
</p>
<br>
<h5>
    PostCSSImport
</h5>
<br>
<p>
    Este plugin permite realizar las importaciones del CSS que tenemos en archivos dispersos, uniendo todo su contenido en un mismo fichero. Como sabes, servir un único archivo CSS es una importante optimización, pero escribir el código en archivos separados aumenta considerablemente la facilidad de mantenimiento.
</p>
<br>
<h5>
    Autoprefixer
</h5>
<br>
<p>
    Autoprefixer es uno de los plugins más sencillos. Simplemente permite aplicar los prefijos CSS que sean necesarios al código fuente, de modo que nos ahorra trabajo y mantiene una mejor compatibilidad con los navegadores actuales y antiguos.
</p>
<br>
<h5>
    PurgeCSS
</h5>
<br>
<p>
    PurgeCSS permite optimizar el CSS, eliminando de los ficheros que vamos a llevar a producción todas las reglas de estilos que no se usan en el proyecto. Este es un plugin esencial si trabajamos con cualquier framework CSS, ya que nos permite una radical optimización del código CSS.
</p>
<br>
<h5>
    CSSnano
</h5>
<br>
<p>
    Otro de los plugins más usados y recomendables es «nano», que nos permite compactar el código CSS y por tanto rebajar su peso.
</p>
<br>
<p>
    Estos son solamente algunos de los ejemplos más destacados de PostCSS, pero tenemos mucho más en su página
</p>
